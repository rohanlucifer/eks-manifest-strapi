---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongodb-strapi
spec:
  replicas: {{ .Values.mongodbStrapi.replicas }}
  selector:
    matchLabels:
      app: mongo
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - args:
        - --dbpath
        - {{ .Values.mongodbStrapi.volumeMountPath }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: {{ .Values.mongodbStrapi.usernameKey }}
              name: {{ .Values.mongodbStrapi.secretName }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: {{ .Values.mongodbStrapi.passwordKey }}
              name: {{ .Values.mongodbStrapi.secretName }}
        image: {{ .Values.mongodbStrapi.image.repository }}:{{ .Values.mongodbStrapi.image.tag }}
        imagePullPolicy: {{ .Values.mongodbStrapi.image.pullPolicy }}
        name: mongo
        resources:
          limits:
            cpu: {{ .Values.mongodbStrapi.resources.limits.cpu }}
            memory: {{ .Values.mongodbStrapi.resources.limits.memory }}
          requests:
            cpu: {{ .Values.mongodbStrapi.resources.requests.cpu }}
            memory: {{ .Values.mongodbStrapi.resources.requests.memory }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: {{ .Values.mongodbStrapi.volumeMountPath }}
          name: mongo-data-dir
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mongo-data-dir
        persistentVolumeClaim:
          claimName: {{ .Values.mongodbStrapi.volumeClaimName }}

